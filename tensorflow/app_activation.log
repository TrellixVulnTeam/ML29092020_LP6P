INFO:root:Start program...
INFO:root:Scalar derivative from Logistics function at point [0.0]:
WARNING:tensorflow:Calling GradientTape.gradient on a persistent tape inside its context is significantly less efficient than calling it outside the context (it causes the gradient ops to be recorded on the tape, leading to increased CPU and memory usage). Only call GradientTape.gradient inside the context if you actually want to trace the gradient in order to compute higher order derivatives.
INFO:root:tf.Tensor([[0.25]], shape=(1, 1), dtype=float32)
INFO:root:Vector derivative from Logistics function for vector [[-1.0, 1, 2.0]]:
INFO:root:tf.Tensor([[0.19661194 0.19661194 0.10499357]], shape=(1, 3), dtype=float32)
INFO:root:-----------------------------------------------------------------
INFO:root:Scalar derivative from SoftPlus function at point [0.0]:
WARNING:tensorflow:Calling GradientTape.gradient on a persistent tape inside its context is significantly less efficient than calling it outside the context (it causes the gradient ops to be recorded on the tape, leading to increased CPU and memory usage). Only call GradientTape.gradient inside the context if you actually want to trace the gradient in order to compute higher order derivatives.
INFO:root:tf.Tensor([[0.5]], shape=(1, 1), dtype=float32)
INFO:root:Vector derivative from SoftPlus function for vector [[-1.0, 1, 2.0]]:
INFO:root:tf.Tensor([[0.26894143 0.7310586  0.8807971 ]], shape=(1, 3), dtype=float32)
INFO:root:-----------------------------------------------------------------
INFO:root:Scalar derivative from ArcTan function at point [0.0]:
WARNING:tensorflow:Calling GradientTape.gradient on a persistent tape inside its context is significantly less efficient than calling it outside the context (it causes the gradient ops to be recorded on the tape, leading to increased CPU and memory usage). Only call GradientTape.gradient inside the context if you actually want to trace the gradient in order to compute higher order derivatives.
INFO:root:tf.Tensor([[1.]], shape=(1, 1), dtype=float32)
INFO:root:Vector derivative from Arctan function for vector [[-1.0, 1, 2.0]]:
INFO:root:tf.Tensor([[0.5 0.5 0.2]], shape=(1, 3), dtype=float32)
